// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AWS CDK Stack matches the snapshot 1`] = `
{
  "Outputs": {
    "ServerlessBackendHttpApiUrlDFCB1069": {
      "Value": {
        "Fn::GetAtt": [
          "ServerlessBackendMessagesApiF037A720",
          "ApiEndpoint",
        ],
      },
    },
    "StaticSiteBucket34E5D9AF": {
      "Value": {
        "Ref": "StaticSiteSiteBucket1A888BC8",
      },
    },
    "StaticSiteDistributionId8C64EF2A": {
      "Value": {
        "Ref": "StaticSiteSiteDistributionE3AF6299",
      },
    },
    "StaticSiteDomainName6BDE1523": {
      "Value": {
        "Fn::GetAtt": [
          "StaticSiteSiteDistributionE3AF6299",
          "DomainName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "StaticSiteSiteBucket1A888BC8",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessBackendAPIGWAccessLogsB7444931": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "undefined_APIGW-AccessLogs",
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerlessBackendApiGWLogWriterRole1D163FD9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessBackendApiGWLogWriterRoleDefaultPolicy1135BF01": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:GetLogEvents",
                "logs:FilterLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ServerlessBackendAPIGWAccessLogsB7444931",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessBackendApiGWLogWriterRoleDefaultPolicy1135BF01",
        "Roles": [
          {
            "Ref": "ServerlessBackendApiGWLogWriterRole1D163FD9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessBackendMessagesApiDefaultStage852D79D3": {
      "Properties": {
        "AccessLogSettings": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ServerlessBackendAPIGWAccessLogsB7444931",
              "Arn",
            ],
          },
          "Format": "{"requestId":"$context.requestId","userAgent":"$context.identity.userAgent","sourceIp":"$context.identity.sourceIp","requestTime":"$context.requestTime","requestTimeEpoch":"$context.requestTimeEpoch","httpMethod":"$context.httpMethod","path":"$context.path","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength","domainName":"$context.domainName"}",
        },
        "ApiId": {
          "Ref": "ServerlessBackendMessagesApiF037A720",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "ServerlessBackendMessagesApiF037A720": {
      "Properties": {
        "CorsConfiguration": {
          "AllowHeaders": [
            "Content-Type",
          ],
          "AllowMethods": [
            "GET",
            "POST",
          ],
          "AllowOrigins": [
            "*",
          ],
        },
        "Name": "MessagesApi",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "ServerlessBackendMessagesApiGETmessagesC87C2CB4": {
      "Properties": {
        "ApiId": {
          "Ref": "ServerlessBackendMessagesApiF037A720",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "GET /messages",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "ServerlessBackendMessagesApiGETmessagesReadIntegration80F53C69",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ServerlessBackendMessagesApiGETmessagesReadIntegration80F53C69": {
      "Properties": {
        "ApiId": {
          "Ref": "ServerlessBackendMessagesApiF037A720",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "ServerlessBackendReadMsgsFnB50141E4",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ServerlessBackendMessagesApiGETmessagesReadIntegrationPermissionFE53CA0C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ServerlessBackendReadMsgsFnB50141E4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ServerlessBackendMessagesApiF037A720",
              },
              "/*/*/messages",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessBackendMessagesApiPOSTmessagesF88BD212": {
      "Properties": {
        "ApiId": {
          "Ref": "ServerlessBackendMessagesApiF037A720",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "POST /messages",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "ServerlessBackendMessagesApiPOSTmessagesWriteIntegration0534CDA1",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ServerlessBackendMessagesApiPOSTmessagesWriteIntegration0534CDA1": {
      "Properties": {
        "ApiId": {
          "Ref": "ServerlessBackendMessagesApiF037A720",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "ServerlessBackendWriteMsgsFn79AC395A",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ServerlessBackendMessagesApiPOSTmessagesWriteIntegrationPermissionA23A2D87": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ServerlessBackendWriteMsgsFn79AC395A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ServerlessBackendMessagesApiF037A720",
              },
              "/*/*/messages",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessBackendMessagesTableB741DEBA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
          {
            "AttributeName": "sk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "sk",
            "KeyType": "RANGE",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerlessBackendReadMsgsFnB50141E4": {
      "DependsOn": [
        "ServerlessBackendReadMsgsFnServiceRoleDefaultPolicy18D6431B",
        "ServerlessBackendReadMsgsFnServiceRole9AEAB17E",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7372cb9714e20e6e2935de810fd31f06bc43335edc5c9c13fb7d91dcca4cdb04.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ServerlessBackendReadMsgsFnServiceRole9AEAB17E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessBackendReadMsgsFnLogRetention8E0DBB43": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ServerlessBackendReadMsgsFnB50141E4",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ServerlessBackendReadMsgsFnServiceRole9AEAB17E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessBackendReadMsgsFnServiceRoleDefaultPolicy18D6431B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ServerlessBackendMessagesTableB741DEBA",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessBackendReadMsgsFnServiceRoleDefaultPolicy18D6431B",
        "Roles": [
          {
            "Ref": "ServerlessBackendReadMsgsFnServiceRole9AEAB17E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessBackendWriteMsgsFn79AC395A": {
      "DependsOn": [
        "ServerlessBackendWriteMsgsFnServiceRoleDefaultPolicy81184315",
        "ServerlessBackendWriteMsgsFnServiceRole6FD9CAD9",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "dcf77ceb656e7ce2b1a6b8da9e7e5174b3da677e4e7874518cf7f15c385caac7.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "ServerlessBackendWriteMsgsFnServiceRole6FD9CAD9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessBackendWriteMsgsFnLogRetentionA6BB4A1F": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ServerlessBackendWriteMsgsFn79AC395A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ServerlessBackendWriteMsgsFnServiceRole6FD9CAD9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessBackendWriteMsgsFnServiceRoleDefaultPolicy81184315": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ServerlessBackendMessagesTableB741DEBA",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessBackendWriteMsgsFnServiceRoleDefaultPolicy81184315",
        "Roles": [
          {
            "Ref": "ServerlessBackendWriteMsgsFnServiceRole6FD9CAD9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticSiteCachePolicy6D692609": {
      "Properties": {
        "CachePolicyConfig": {
          "DefaultTTL": 3600,
          "MaxTTL": 86400,
          "MinTTL": 0,
          "Name": {
            "Fn::Join": [
              "",
              [
                "AWSCDKStackStaticSiteCachePolicyA24EE0B1-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "ParametersInCacheKeyAndForwardedToOrigin": {
            "CookiesConfig": {
              "CookieBehavior": "none",
            },
            "EnableAcceptEncodingBrotli": false,
            "EnableAcceptEncodingGzip": false,
            "HeadersConfig": {
              "HeaderBehavior": "none",
            },
            "QueryStringsConfig": {
              "QueryStringBehavior": "none",
            },
          },
        },
      },
      "Type": "AWS::CloudFront::CachePolicy",
    },
    "StaticSiteSiteBucket1A888BC8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticSiteSiteBucketAutoDeleteObjectsCustomResource2FD3C549": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StaticSiteSiteBucketPolicyD7934718",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "StaticSiteSiteBucket1A888BC8",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticSiteSiteBucketPolicyD7934718": {
      "Properties": {
        "Bucket": {
          "Ref": "StaticSiteSiteBucket1A888BC8",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StaticSiteSiteBucket1A888BC8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StaticSiteSiteBucket1A888BC8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "StaticSitecloudfrontOAI03C2A8A9",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "StaticSiteSiteBucket1A888BC8",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticSiteSiteDistributionE3AF6299": {
      "Properties": {
        "DistributionConfig": {
          "CustomErrorResponses": [
            {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
            {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachePolicyId": {
              "Ref": "StaticSiteCachePolicy6D692609",
            },
            "CachedMethods": [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "TargetOriginId": "AWSCDKStackStaticSiteSiteDistributionOrigin184CE5864",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "StaticSiteSiteBucket1A888BC8",
                  "RegionalDomainName",
                ],
              },
              "Id": "AWSCDKStackStaticSiteSiteDistributionOrigin184CE5864",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "StaticSitecloudfrontOAI03C2A8A9",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticSitecloudfrontOAI03C2A8A9": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "OAI for StaticSite",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
